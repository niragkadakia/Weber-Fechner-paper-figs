"""
Plot estimation error of inferred signal in compressed sensing 
from error objects (.npz) generated by calculate_errors.py, 
averaged over 2nd variables. 

Created by Nirag Kadakia at 22:00 10-25-2017
This work is licensed under the 
Creative Commons Attribution-NonCommercial-ShareAlike 4.0 
International License. 
To view a copy of this license, visit 
http://creativecommons.org/licenses/by-nc-sa/4.0/.
"""


import scipy as sp
import sys
import matplotlib.pyplot as plt
sys.path.append('../../shared_src')
from save_load_figure_data import load_success_ratios, save_fig
from plot_formats import fig_errors_vs_Kk

# The location of the source code for CS-variability-adaptation is listed
# in the ../../shared_src/local_methods file within src_dir()
from local_methods import src_dir
sys.path.append(src_dir())
from utils import get_flag
from load_specs import read_specs_file
from analysis import binary_success, binary_errors
from load_data import load_aggregated_object_list



def plot_errors_vs_Kk(data_flag, conc_shift=-8):
	"""
	conc_shift is shift of concentration to realistic levels; i.e. consider
	all odor stimuli as relative to this value.
	"""
	
	list_dict = read_specs_file(data_flag)
	iter_vars = list_dict['iter_vars']
	
	# Decoding accuracy subfigures
	fig = fig_errors_vs_Kk()

	assert len(iter_vars) == 3, "Need 3 iter_vars"
	iter_var = iter_vars.keys()[0]
	Kk_var = iter_vars.keys()[2]
	
	x = sp.log(iter_vars[iter_var])/sp.log(10) + conc_shift
	y = iter_vars[Kk_var]
	X, Y = sp.meshgrid(x, y)
	
	successes = load_success_ratios(data_flag)
	
	# Plot successes, averaged over second axis of successes array
	avg_successes = sp.average(successes, axis=1)
	plt.pcolormesh(X, Y, avg_successes.T, cmap=plt.cm.hot, rasterized=True, 
					shading='gouraud', vmin=-0.05, vmax=1.05)
	plt.xlim(-8, -4)
	plt.ylim(1, 8)
	plt.colorbar()
	save_fig('errors_vs_Kk', subdir=data_flag)
	
		
if __name__ == '__main__':
	data_flag = get_flag()
	plot_errors_vs_Kk(data_flag)